{"slots":{"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}},"handlers":[{"key":1,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":";(function()\nlocal a={}local b=0;function library.addEventHandlers(c)if not c or c.onEvent and c.triggerEvent then return false end;b=b+1;a[b]=c;local d,e,f='table','function','thread'if d~=type(c)then error('You can only add event handlers to table objects!')end;local g={}local function h(c)local i=type(c)return e==i or d==i and h(getmetatable(c).__call)or f==i end;c.onEvent=function(self,j,k,l)if not h(k)then error('Event handler must be a function, a callable object or a thread!')end;l=l or self;if d~=type(l)then error('The value of self must be a table!')end;if not g[j]then g[j]={_=0}end;local m=f==type(k)and function(...)coroutine.resume(k,...)end or k;local k=g[j]local n=k._+1;k[n]={m,l}k._=n;return n end;c.clearEvent=function(self,j,o)if g[j]and g[j][o]then g[j][o]=nil end end;c.clearAllEvents=function(self)g={}end;c.triggerEvent=function(self,j,...)local p=g[j]if p then for q=1,p._ do local k=p[q]if k then k[1](k[2],...)end end end end;return true end;function library.clearAllEventHandlers()for q=1,b do local c=a[q]if c and c.clearAllEvents then c:clearAllEvents()end end end\nend)()"},{"key":2,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":";(function()\nlocal a=DULibrary or{}function a.getLinks(b,c)local d={}if not b then b={}end;for e,f in pairs(unit.getOutPlugs())do local g=unit[f.name]if'table'==type(g)and'function'==type(g.getClass)then local h=true;for i,j in pairs(b)do if not('function'==type(g[i])and j==g[i]():sub(1,#j))then h=false;break end end;if h then if c then table.insert(d,g)else d[f.name]=g end end end end;return d end;function a.getLinksByClass(k,c)return a.getLinks({getClass=k},c)end;function a.getLinkByClass(k)return a.getLinksByClass(k,true)[1]end;function a.getCoreUnit()return a.getLinkByClass('CoreUnit')end;function a.getLinkByName(l)local m=a.getCoreUnit()if not m then error('getLinkByName requires a linked CoreUnit to work')end;local d=a.getLinks()for n,o in pairs(d)do if l==m.getElementNameById(o.getLocalId())then return o end end end\nend)()"},{"key":3,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":"package.preload['Build Helper:parameters.lua']=(function()\n\nend)\npackage.preload['Build Helper:includes/tools.lua']=(function()\nlocal a,b=math.floor,math.random;function ArrayRemove(c,d)local e,f=1,#c;for g=1,f do if d(c,g,e)then if g~=e then c[e]=c[g]c[g]=nil end;e=e+1 else c[g]=nil end end;return c end;function Rand(f)return a(b()*f)end\nend)\npackage.preload['Build Helper:includes/Wrapper.lua']=(function()\nWrapper={}Wrapper.__index=Wrapper;setmetatable(Wrapper,{__call=function(a,...)return a.new(...)end})local b={}function Wrapper.new(c,d,e)local self=setmetatable({},Wrapper)self.unit=c;self.system=d;self.library=e;self.stopped=false;self.stopOnError=false;self.rethrowErrorAlways=false;self.rethrowErrorIfStopped=true;self.printSameErrorOnlyOnce=true;self.printError=true;self.error=function(f)if self.stopped then return end;f=tostring(f):gsub('\"%-%- |STDERROR%-EVENTHANDLER[^\"]*\"','chunk')local g=self.unit or self or{}if self.printError and self.system and self.system.print then if not self.printSameErrorOnlyOnce or b[f]==nil then b[f]=true;self.system.print(f)end end;if self.stopOnError then self.stopped=true end;if self.stopped and g and g.exit then g.exit()end;if self.rethrowErrorAlways or self.stopped and self.rethrowErrorIfStopped then error(f)end end;self.traceback=traceback or debug and debug.traceback or function(f,g)return g or f end;return self end;function Wrapper:execute(h)if not self.stopped then local f,g=xpcall(h,self.traceback,self.unit)if not f then self.error(g)end end end;function Wrapper:reload(h,i)self.library.clearAllEventHandlers()if#i>0 then local j=false;local k=false;self.system:onEvent('onActionStart',function(l,m)if m==\"brake\"then k=true elseif k then if m==\"lshift\"then j=true elseif j and m==\"speedup\"then if i then for n=1,#i do local o=i[n]if package.loaded[o]then DUSystem.print(\"Reload: \"..o)package.loaded[o]=nil;require(o)end end end;self:reload(h,i)end end end)self.system:onEvent('onActionStop',function(l,m)if m==\"brake\"then k=false elseif m==\"lshift\"then j=true end end)end;self:execute(h)end\nend)\npackage.preload['Build Helper:includes/Class.lua']=(function()\nClass={}local function a(b,c)local d={}local e={__index=d}if c then setmetatable(d,{__index=c})end;function d:new(...)local f={}setmetatable(f,e)f:init(...)return f end;function d:init(...)DUSystem.print(\"init must be implemented\")end;function d:class()return d end;function d:super()return c end;function d:instanceOf(g)local h=false;local i=d;while i and not h do if i==g then h=true else i=i:super()end end;return h end;return d end;setmetatable(Class,{__call=a})\nend)\npackage.preload['Build Helper:classes/Helper.lua']=(function()\nHelper=Class()local a,b,c,d,e,f,g,h=math.sqrt,math.tan,math.rad,math.acos,math.abs,math.floor,math.max,math.min;local i,j=string.len,string.format;local k,l=table.concat,table.sort;local m=0.25;local n=1/84;local o=180/math.pi;local p=0.1;local q=100000000.0;local r=1e-6;local s=-q/(q-p)local t=p*s;local u=require('dkjson')function Helper:init(v,w,x,y)self.__unit=v;self.__system=w;self.__system.showScreen(true)self.__construct=x;self.__databank=y;self.__points={}self.__subPoints={}self.__subPointLimit=21;self.__pointsCount=0;self.__hoveringElement={\"\",0}self.__clickedElement={\"\",0}self.__currentSelectedPosition={1,1,1}self.__altDown=false;self.__shiftDown=false;self.__ctrlDown=false;self.__hidden=false;self.__restoringSave=nil;self.__config={lineColor=\"lightblue\",lineWidth=5,dotColor=\"blue\",dotRadius=10,subDotRadius=8,hoverColor=\"darkblue\"}self.__data={construct={position={0,0,0},up={0,0,0},forward={0,0,0},right={0,0,0}},camera={position={0,0,0},up={0,0,0},forward={0,0,0},right={0,0,0}},screen={height=0,width=0},tanFov=0,aspectRatio=0,template=\"\"}self:updateData(true)self:loadPoints()self:loadConfig()self:initEvents()end;function Helper:initEvents()self.__system:onEvent(\"onActionStart\",function(z,A)wrapper:execute(function()self:onActionStart(A)end)end)self.__system:onEvent(\"onActionStop\",function(z,A)wrapper:execute(function()self:onActionStop(A)end)end)self.__system:onEvent(\"onInputText\",function(z,B)wrapper:execute(function()self:onInputText(B)end)end)self.__unit:onEvent(\"onTimer\",function(z,C)wrapper:execute(function()self:onTimer(C)end)end)self.__unit.setTimer(\"dataUpdateFull\",10)self.__unit.setTimer(\"dataUpdatePosition\",1/1000)self.__unit.setTimer(\"update\",1/10000)end;function Helper:loadConfig()if self.__databank~=nil and self.__databank.hasKey(\"dh-config\")then local D=u.decode(self.__databank.getStringValue(\"dh-config\"))if type(D)==\"table\"then for E,F in pairs(self.__config)do self.__config[E]=D[E]~=nil and D[E]or F end end end end;function Helper:loadPoints(G)if G==nil then G=\"dh-points\"end;if self.__databank~=nil and self.__databank.hasKey(G)then local D=u.decode(self.__databank.getStringValue(G))if type(D)==\"table\"then self.__points=D;self.__pointsCount=#self.__points;self:buildSubpoints()return true end end;return false end;function Helper:savePoints(G)if G==nil then G=\"dh-points\"end;if self.__databank~=nil then self.__databank.setStringValue(G,u.encode(self.__points))end end;function Helper:removeSave(G)if G~=nil and self.__databank~=nil and self.__databank.hasKey(G)then self.__databank.clearValue(G)end end;function Helper:restoreSave()if self.__restoringSave~=nil then local H=self.__restoringSave;self.__restoringSave=nil;local G=\"dh-save-\"..H;if self.__databank~=nil and self.__databank.hasKey(G)then self:loadPoints(G)self:savePoints()self.__system.print([[\"]]..H..[[\" points restored.]])else self.__system.print(\"Give save is not existing\")end end end;function Helper:clearPoints()self.__points={}self.__pointsCount=0;self.__hoveringElement={\"\",0}self.__clickedElement={\"\",0}self:savePoints()end;function Helper:removePointAt(I)if I<=self.__pointsCount and I>0 then local J=1;for K=1,self.__pointsCount do if K~=I then if K~=J then self.__points[J]=self.__points[K]self.__points[K]=nil end;J=J+1 else self.__points[K]=nil end end;self.__pointsCount=self.__pointsCount-1;if self.__clickedElement[1]==\"point\"then if I==self.__clickedElement[2]then self.__clickedElement={\"\",0}elseif I<self.__clickedElement[2]then self.__clickedElement[2]=self.__clickedElement[2]-1 end end;self:buildSubpoints()self:savePoints()end end;function Helper:removeLastPoint()self:removePointAt(self.__pointsCount)end;function Helper:formatCoordinates(L)local M,N,O=L[1],L[2],L[3]local P,Q,R=L[4]or 0,L[5]or 0,L[6]or 0;return j(\"%s:%s, %s:%s, %s:%s\",M,P,O,R,N,Q)end;function Helper:tranposePoint(L)local M,N,O=self:getXYZFromCoordinates(L)return{M*self.__data.construct.right[1]+N*self.__data.construct.up[1]+O*self.__data.construct.forward[1],M*self.__data.construct.right[2]+N*self.__data.construct.up[2]+O*self.__data.construct.forward[2],M*self.__data.construct.right[3]+N*self.__data.construct.up[3]+O*self.__data.construct.forward[3]}end;function Helper:addPoint(L)if L~=nil then local S=self:tranposePoint(L)self.__pointsCount=self.__pointsCount+1;self.__points[self.__pointsCount]={S[1],S[2],S[3],L}self:buildSubpointsAt(self.__pointsCount,false)self:savePoints()self.__system.print(j(\"Point added (%s)\",self:formatCoordinates(L)))else self.__system.print(\"Unable to parse the given coordinates.\")end end;function Helper:closeShape()if self.__pointsCount>2 then self.__pointsCount=self.__pointsCount+1;if self.__clickedElement[1]==\"point\"then self.__points[self.__pointsCount]=self.__points[self.__clickedElement[2]]elseif self.__clickedElement[1]==\"subpoint\"then self.__points[self.__pointsCount]=self.__subPoints[self.__clickedElement[2]][self.__clickedElement[3]]else self.__points[self.__pointsCount]=self.__points[1]end;self:buildSubpointsAt(self.__pointsCount,false)self:savePoints()else self.__system.print(\"You need at least 3 point to close the shape.\")end end;function Helper:movePoint(L)if self.__clickedElement[1]==\"point\"then if L~=nil then self.__points[self.__clickedElement[2]]=L;self:buildSubpointsAt(self.__clickedElement[2],true)else self.__system.print(\"Unable to parse the given coordinates.\")end else self.__system.print(\"Select a corner point before trying to move it.\")end end;function Helper:propagatePoint(T)if self.__pointsCount>=2 then local U=self.__points[self.__pointsCount-1][4]local V=self.__points[self.__pointsCount][4]local W,X,Y=U[1]+U[4]*n,U[2]+U[5]*n,U[3]+U[6]*n;local Z,_,a0=V[1]+V[4]*n,V[2]+V[5]*n,V[3]+V[6]*n;local a1,a2,a3=Z-W,_-X,a0-Y;local a4=a(a1*a1+a2*a2+a3*a3)if a4>r then local a5,a6,a7=a1/a4,a2/a4,a3/a4;for K=T,1,-1 do local M,N,O=W+a5*K,X+a6*K,Y+a7*K;local L=self:getCoordinatesFromXYZ(M,N,O)if L~=nil then self:addPoint(L)return end end end;self.__system.print(\"Unable to propagate the distance, no voxel position has been found.\")else self.__system.print(\"You need at least 2 points to propagate the line.\")end end;function Helper:modifyPoint(I,M,N,O)if I>0 and I<=self.__pointsCount then local L=self.__points[I][4]local P,Q,R=L[4]+M,L[5]+N,L[6]+O;local a8,a9,aa=P%84,Q%84,R%84;local ab,ac,ad=f(P/84),f(Q/84),f(R/84)L={L[1]+ab,L[2]+ac,L[3]+ad,a8,a9,aa}local S=self:tranposePoint(L)self.__points[I]={S[1],S[2],S[3],L}self:buildSubpointsAt(I,true)self:savePoints()end end;function Helper:buildSubpointsAt(I,ae)if I>1 and I<=self.__pointsCount then local af=I-1;local W,X,Y=self.__points[af][4][1]+self.__points[af][4][4]*n,self.__points[af][4][2]+self.__points[af][4][5]*n,self.__points[af][4][3]+self.__points[af][4][6]*n;local Z,_,a0=self.__points[I][4][1]+self.__points[I][4][4]*n,self.__points[I][4][2]+self.__points[I][4][5]*n,self.__points[I][4][3]+self.__points[I][4][6]*n;local a1,a2,a3=Z-W,_-X,a0-Y;local a4=a(a1*a1+a2*a2+a3*a3)local ag={}if a4>r then local a5,a6,a7=a1/a4,a2/a4,a3/a4;local ah=f(a4/n)local ai=0;for J=self.__subPointLimit,ah do if ai<J then local aj=J*n;local M,N,O=W+a5*aj,X+a6*aj,Y+a7*aj;local L=self:getCoordinatesFromXYZ(M,N,O)if L~=nil then local S=self:tranposePoint(L)ag[#ag+1]={S[1],S[2],S[3],L}ai=J+self.__subPointLimit end end end;self.__subPoints[I]=ag end;if ae and I<self.__pointsCount then self:buildSubpointsAt(I+1,false)end end end;function Helper:buildSubpoints()if self.__pointsCount>1 then for K=2,self.__pointsCount do self:buildSubpointsAt(K,false)end end end;function Helper:getXYZFromCoordinates(L)local ak,al,am=L[1],L[2],L[3]local P,Q,R=L[4]or 0,L[5]or 0,L[6]or 0;local M,N,O=ak+n*P,al+n*Q,am+n*R;return(M+0.5)*m,(N+0.5)*m,(O+0.5)*m end;function Helper:getCoordinatesFromXYZ(M,N,O)local an=n/4;local ao,ap,aq=f(M/n+0.5)*n,f(N/n+0.5)*n,f(O/n+0.5)*n;if e(M-ao)<an and e(N-ap)<an and e(O-aq)<an then M,N,O=f(ao),f(ap),f(aq)return{M,N,O,f((ao-M)/n+0.5),f((ap-N)/n+0.5),f((aq-O)/n+0.5)}end;return nil end;function Helper:explodeCoordinates(L)local ar=function(as,at)local aj={{as,at}}local K=1;while at+K*84<127 do aj[#aj+1]={as-K,at+K*84}K=K+1 end;K=1;while at-K*84>-127 do aj[#aj+1]={as+K,at-K*84}K=K+1 end;return aj end;return ar(L[1],L[4]),ar(L[3],L[6]),ar(L[2],L[5])end;function Helper:onActionStart(A)if A==\"speedup\"then self.__currentSelectedPosition={1,1,1}self.__clickedElement=self.__hoveringElement elseif A==\"option1\"then self.__currentSelectedPosition[1]=self.__currentSelectedPosition[1]+1 elseif A==\"option2\"then self.__currentSelectedPosition[2]=self.__currentSelectedPosition[2]+1 elseif A==\"option3\"then self.__currentSelectedPosition[3]=self.__currentSelectedPosition[3]+1 elseif A==\"option8\"then if self.__ctrlDown then self.__subPointLimit=21 elseif self.__shiftDown then self.__subPointLimit=h(self.__subPointLimit+1,84)else self.__subPointLimit=g(self.__subPointLimit-1,1)end;self:buildSubpointsAt(2,true)elseif A==\"option9\"then self.__hidden=not self.__hidden elseif A==\"lshift\"then self.__shiftDown=true elseif A==\"brake\"then self.__ctrlDown=true elseif A==\"lalt\"then self.__altDown=true elseif self.__clickedElement[1]==\"point\"then local au=self.__shiftDown and 84 or self.__ctrlDown and 4 or 1;if A==\"strafeleft\"then self:modifyPoint(self.__clickedElement[2],-1*au,0,0)elseif A==\"straferight\"then self:modifyPoint(self.__clickedElement[2],1*au,0,0)elseif A==\"up\"then if self.__altDown then self:modifyPoint(self.__clickedElement[2],0,0,1*au)else self:modifyPoint(self.__clickedElement[2],0,1*au,0)end elseif A==\"down\"then if self.__altDown then self:modifyPoint(self.__clickedElement[2],0,0,-1*au)else self:modifyPoint(self.__clickedElement[2],0,-1*au,0)end end end end;function Helper:onActionStop(A)if A==\"lshift\"then self.__shiftDown=false elseif A==\"brake\"then self.__ctrlDown=false elseif A==\"lalt\"then self.__altDown=false end end;function Helper:onInputText(B)if B:sub(1,4)==\"/add\"then local L=self:parseCoordinates(B:sub(6))self:addPoint(L)elseif B==\"/points\"then self:printPoints()elseif B==\"/rem\"then self:removeLastPoint()self.__system.print(\"Last point removed\")elseif B:sub(1,5)==\"/move\"then local L=self:parseCoordinates(B:sub(7))self:movePoint(L)elseif B==\"/close\"then self:closeShape()elseif B:sub(1,10)==\"/propagate\"then local T=tonumber(B:sub(12))if T~=nil and T>0 then self:propagatePoint(T)else self.__system.print(\"You have to give a positive distance in voxel\")end elseif B:sub(1,5)==\"/save\"then local G=B:sub(7)if G~=nil and G~=\"\"then self:savePoints(\"dh-save-\"..G)self.__system.print([[Points saved under \"]]..G..[[\"]])else self.__system.print(\"You need to assign a name to your saved item.\")end elseif B:sub(1,8)==\"/restore\"then local G=B:sub(10)if G~=nil and G~=\"\"then self.__restoringSave=G else self.__system.print(\"You give the name of the save you want to retore.\")end elseif B:sub(1,7)==\"/remove\"then local G=B:sub(9)if G~=nil and G~=\"\"then self:removeSave(\"dh-save-\"..G)self.__system.print([[Save \"]]..G..[[\" removed]])end elseif B==\"/displaysave\"then self:printSaves()elseif B==\"/clear\"then self:clearPoints()self.__system.print(\"All points have been cleared\")elseif B:sub(1,7)==\"/config\"then local av=B:sub(9)if av==nil or i(av)==0 then self:printConfig()else local E,F=B:match(\"^%s*([^%s]+)%s+([^%s]+)\")if E~=nil and F~=nil then self:setConfig(E,F)end end elseif B==\"/help\"then self:printHelp()else self.__system.print(\"Command not found or wrong format (see /help)\")end end;function Helper:parseCoordinates(B)local M,O,N=B:match(\"^%s*(%-?%d+%.?%d*[%+%-]?%d*)%s+(%-?%d+%.?%d*[%+%-]?%d*)%s+(%-?%d+%.?%d*[%+%-]?%d*)%s*$\")if M~=nil and N~=nil and O~=nil then local P,Q,R=0,0,0;M,P=(M..\"+0\"):match(\"^(%-?%d+%.?%d*)%+?(%-?%d+)\")N,Q=(N..\"+0\"):match(\"^(%-?%d+%.?%d*)%+?(%-?%d+)\")O,R=(O..\"+0\"):match(\"^(%-?%d+%.?%d*)%+?(%-?%d+)\")return{M,N,O,P,Q,R}end;return nil end;function Helper:setConfig(E,F)if self.__config[E]~=nil then self.__config[E]=F;if self.__databank~=nil then self.__databank.setStringValue(\"dh-config\",u.encode(self.__config))end end end;function Helper:isElementClicked(type,I,aw)return self.__clickedElement[1]==type and self.__clickedElement[2]==I and self.__clickedElement[3]==aw end;function Helper:printPoints()self.__system.print(\"\")self.__system.print(\"--- List of points ---\")for K=1,self.__pointsCount do self.__system.print(self:formatCoordinates(self.__points[K][4]))end;self.__system.print(\"\")end;function Helper:printConfig()local ax={}for E in pairs(self.__config)do ax[#ax+1]=E end;l(ax)self.__system.print(\"\")self.__system.print(\"--- Configuration ---\")for z,E in ipairs(ax)do self.__system.print(j(\"%s %s\",E,self.__config[E]))end;self.__system.print(\"\")end;function Helper:printSaves()if self.__databank~=nil then local ax=self.__databank.getKeyList()l(ax)self.__system.print(\"--- Saves ---\")for K,E in ipairs(ax)do if E:sub(1,8)==\"dh-save-\"then self.__system.print(E:sub(9))end end;self.__system.print(\"\")else self.__system.print(\"No databank found.\")end end;function Helper:printHelp()local ay={[\"/add <number>(+-)<number> <number>(+-)<number> <number>(+-)<number>\"]=\"Add a point with voxel precision tools coordinates\",[\"/rem\"]=\"Remove last inserted point\",[\"/move <number>(+-)<number> <number>(+-)<number> <number>(+-)<number>\"]=\"Move selected point to the new position\",[\"/close\"]=\"Close the shape (require at least 3 points)\",[\"/propagate distance\"]=\"Propagate the last vector for a distance\",[\"/clear\"]=\"Clear all points\",[\"/points\"]=\"Print all points\"}local az={[\"/save name\"]=\"Save current point configuration in database with given name\",[\"/restore name\"]=\"Restore point configuration from database with given name\",[\"/remove name\"]=\"Remove point configuration from database with given name\",[\"/displaysave\"]=\"Display all saved point configurations\"}local aA={[\"/config\"]=\"Print configuration\",[\"/config <key> <value>\"]=\"Set a specific configuration\",[\"/help\"]=\"Print help\"}local aB=function(aC)local ax={}for E in pairs(aC)do ax[#ax+1]=E end;l(ax)for z,E in ipairs(ax)do self.__system.print(j(\"%s - %s\",E,aC[E]))end end;self.__system.print(\"\")self.__system.print(\"--- Build Helper Commands ---\")aB(ay)self.__system.print(\"------\")aB(az)self.__system.print(\"------\")aB(aA)self.__system.print(\"\")end;function Helper:onTimer(C)if C==\"dataUpdateFull\"then self:updateData(true)elseif C==\"dataUpdatePosition\"then self:updateData(false)elseif C==\"update\"then self:update()end end;function Helper:updateData(aD)self.__data.construct={position=self.__construct.getWorldPosition(),forward=self.__construct.getWorldOrientationForward(),right=self.__construct.getWorldOrientationRight(),up=self.__construct.getWorldOrientationUp()}self.__data.camera={position=self.__system.getCameraWorldPos(),forward=self.__system.getCameraWorldForward(),right=self.__system.getCameraWorldRight(),up=self.__system.getCameraWorldUp()}if aD then local aE=self.__system.getCameraVerticalFov()self.__data.screen.width=self.__system.getScreenWidth()self.__data.screen.height=self.__system.getScreenHeight()self.__data.tanFov=1.0/b(c(aE)*0.5)self.__data.aspectRatio=self.__data.screen.height/self.__data.screen.width*self.__data.tanFov;self.__data.template=[[ <style> svg { left:0px; position:absolute; top:0px; } .info { background: #ffffff; border-radius: 10px; display: flex; left: 40px; padding: 20px; position: absolute; top: 40px; } </style> <div class=\"info\">%s</div> <div> <svg viewBox=\"0 0 ]]..self.__data.screen.width..[[ ]]..self.__data.screen.height..[[\">%s</svg> </div> ]]end end;function Helper:update()if self.__hidden then self:restoreSave()self.__system.setScreen(\"\")return end;local aF,aG,aH=self.__data.camera.position[1],self.__data.camera.position[2],self.__data.camera.position[3]local aI,aJ,aK=self.__data.camera.forward[1],self.__data.camera.forward[2],self.__data.camera.forward[3]local aL,aM,aN=self.__data.camera.right[1],self.__data.camera.right[2],self.__data.camera.right[3]local aO,aP,aQ=self.__data.camera.up[1],self.__data.camera.up[2],self.__data.camera.up[3]local aR,aS,aT=self.__data.construct.position[1],self.__data.construct.position[2],self.__data.construct.position[3]local aU,aV,aW=0,0,0;local a8,a9,aa=0,0,0;local aX,aY,aZ=0,0,0;local a_,b0=0,0;local b1=0;local b2={}local b3={}local b4=0;local function b5()a8=aU*aL+aV*aM+aW*aN;a9=aU*aI+aV*aJ+aW*aK;aa=aU*aO+aV*aP+aW*aQ;aX=self.__data.aspectRatio*a8/a9;aY=-self.__data.tanFov*aa/a9;aZ=(-s*a9+t)/a9;a_,b0=(aX+1)*self.__data.screen.width*0.5,(aY+1)*self.__data.screen.height*0.5;b1=a(aU*aU+aV*aV+aW*aW)or 0 end;local b6=function(b7,b8,b9)local M,N,O=b7[1]+aR,b7[2]+aS,b7[3]+aT;local ba=false;local bb=self.__config.dotColor;aU=M-aF;aV=N-aG;aW=O-aH;b5()if aZ<1 then local bc=d((aU*aI+aV*aJ+aW*aK)/(a(aU*aU+aV*aV+aW*aW)*a(aI*aI+aJ*aJ+aK*aK)))ba=e(bc*o)<1;if ba then bb=self.__config.hoverColor end;b8=b8/b1;b4=b4+1;if b9 then local bd=1/b1;b3[b4]=j([[<circle fill=\"%s\" stroke=\"white\" stroke-width=\"%.1f\" cx=\"%.1f\" cy=\"%.1f\" r=\"%.1f\" />]],bb,bd,a_,b0,b8)else b3[b4]=j([[<circle fill=\"%s\" cx=\"%.1f\" cy=\"%.1f\" r=\"%.1f\" />]],bb,a_,b0,b8)end end;return ba end;local be=function(bf,bg)local bb=self.__config.lineColor;for K=1,bg do local W,X,Y=bf[K][1],bf[K][2],bf[K][3]aU=W+aR-aF;aV=X+aS-aG;aW=Y+aT-aH;b5()if aZ<1 and K+1<=bg then local bd=self.__config.lineWidth/b1;b4=b4+1;b3[b4]=j([[<polyline fill=\"none\" stroke=\"%s\" stroke-width=\"%.1f\" stroke-opacity=\"0.5\" points=\"%.1f,%.1f ]],bb,bd,a_,b0)for J=K+1,bg do local Z,_,a0=bf[J][1],bf[J][2],bf[J][3]aU=Z+aR-aF;aV=_+aS-aG;aW=a0+aT-aH;b5()if aZ<1 then b4=b4+1;b3[b4]=j([[%.1f,%.1f ]],a_,b0)end end;b4=b4+1;b3[b4]=[[\"/>]]break end end end;local bh={\"\",0}if self.__pointsCount>1 then be(self.__points,self.__pointsCount)end;for K=1,self.__pointsCount do if b6(self.__points[K],self.__config.dotRadius,self:isElementClicked(\"point\",K))then bh={\"point\",K}end;if self.__subPoints[K]~=nil then for J=1,#self.__subPoints[K]do if b6(self.__subPoints[K][J],self.__config.subDotRadius,self:isElementClicked(\"subpoint\",K,J))then bh={\"subpoint\",K,J}end end end;self.__hoveringElement=bh end;if self.__clickedElement[1]~=\"\"then local M,N,O=nil,nil,nil;if self.__clickedElement[1]==\"point\"then M,N,O=self:explodeCoordinates(self.__points[self.__clickedElement[2]][4])elseif self.__clickedElement[1]==\"subpoint\"then M,N,O=self:explodeCoordinates(self.__subPoints[self.__clickedElement[2]][self.__clickedElement[3]][4])end;if M~=nil and N~=nil and O~=nil then local bi,bj,bk=#M,#N,#O;local bl,bm,bn=M[self.__currentSelectedPosition[1]%bi+1],N[self.__currentSelectedPosition[2]%bj+1],O[self.__currentSelectedPosition[3]%bk+1]b2[#b2+1]=\"<ul>\"b2[#b2+1]=j(\"<li>X: %s:%s</li>\",bl[1],bl[2])b2[#b2+1]=j(\"<li>Y: %s:%s</li>\",bm[1],bm[2])b2[#b2+1]=j(\"<li>Z: %s:%s</li>\",bn[1],bn[2])b2[#b2+1]=\"</ul>\"end end;self:restoreSave()self.__system.setScreen(j(self.__data.template,k(b2),k(b3)))end\nend)\npackage.preload['Build Helper:init.lua']=(function()\nlocal a=function()local b=DULibrary.getLinkByClass(\"DataBankUnit\")DUUnit.hideWidget()Helper:new(DUUnit,DUSystem,DUConstruct,b)end;a()\nend)"},{"key":4,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":"library.addEventHandlers(library)\nlibrary.addEventHandlers(system)\nlibrary.addEventHandlers(player)\nlibrary.addEventHandlers(construct)\nlibrary.addEventHandlers(unit)"},{"key":5,"filter":{"slotKey":-4,"signature":"onActionStart(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionStart',action)"},{"key":6,"filter":{"slotKey":-4,"signature":"onActionLoop(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionLoop',action)"},{"key":7,"filter":{"slotKey":-4,"signature":"onActionStop(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionStop',action)"},{"key":8,"filter":{"slotKey":-4,"signature":"onUpdate()","args":[]},"code":"system:triggerEvent('onUpdate')"},{"key":9,"filter":{"slotKey":-4,"signature":"onFlush()","args":[]},"code":"system:triggerEvent('onFlush')"},{"key":10,"filter":{"slotKey":-4,"signature":"onInputText(text)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onInputText',text)"},{"key":11,"filter":{"slotKey":-4,"signature":"onCameraChanged(mode)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onCameraChanged',mode)"},{"key":12,"filter":{"slotKey":-3,"signature":"onParentChanged(oldId,newId)","args":[{"variable":"*"},{"variable":"*"}]},"code":"player:triggerEvent('onParentChanged',oldId,newId)"},{"key":13,"filter":{"slotKey":-2,"signature":"onDocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onDocked',id)"},{"key":14,"filter":{"slotKey":-2,"signature":"onUndocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onUndocked',id)"},{"key":15,"filter":{"slotKey":-2,"signature":"onPlayerBoarded(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onPlayerBoarded',id)"},{"key":16,"filter":{"slotKey":-2,"signature":"onVRStationEntered(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onVRStationEntered',id)"},{"key":17,"filter":{"slotKey":-2,"signature":"onConstructDocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onConstructDocked',id)"},{"key":18,"filter":{"slotKey":-2,"signature":"onPvPTimer(active)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onPvPTimer',active)"},{"key":19,"filter":{"slotKey":-1,"signature":"onStop()","args":[]},"code":"unit:triggerEvent('onStop')"},{"key":20,"filter":{"slotKey":-1,"signature":"onTimer(timerId)","args":[{"variable":"*"}]},"code":"unit:triggerEvent('onTimer',timerId)"},{"key":21,"filter":{"slotKey":-1,"signature":"onStart()","args":[]},"code":"customVariable=\"value\" --export: Description of the variable (Default: value)\nDUUnit=unit;require('Build Helper:parameters.lua')require('Build Helper:includes/tools.lua')require('Build Helper:includes/Wrapper.lua')require('Build Helper:includes/Class.lua')require('Build Helper:classes/Helper.lua')require('Build Helper:init.lua')"}],"events":[],"methods":[]}